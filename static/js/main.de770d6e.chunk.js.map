{"version":3,"sources":["components/Header.js","components/Square.js","components/Grid.js","App.js","index.js"],"names":["Header","props","className","Square","state","lived","this","makeClassNameForSquare","React","Component","Grid","initializeGrid","rowCount","colCount","grid","weeksLived","row","currentRow","col","push","weeksCount","weekDifference","App","handleInputChange","event","setState","birthdate","target","value","handleBirthdateSubmit","preventDefault","calculateWeekDifference","birthday","Date","onSubmit","type","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAWeA,EATA,SAACC,GACZ,OACI,sBAAKC,UAAU,mBAAf,UACI,oBAAIA,UAAU,SAAd,gCACA,oBAAIA,UAAU,aAAd,uDCsBGC,E,kDAnBX,WAAYF,GAAQ,IAAD,8BACf,cAAMA,IACDG,MAAQ,CACTC,MAAO,EAAKJ,MAAMI,OAHP,E,0DAOnB,WACI,OAAGC,KAAKF,MAAMC,MAAe,eAChB,gB,oBAGjB,WACI,OACI,qBAAKH,UAAWI,KAAKC,+B,GAfZC,IAAMC,WCwCZC,E,kDAzCb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IAQRU,eAAiB,WAA8C,IAA7CC,EAA4C,uDAAjC,GAAIC,EAA6B,uDAAlB,GAAIC,EAAc,uDAAP,GACrD,GAAuB,GAAnB,EAAKC,WACP,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAUI,IAAO,CAEvC,IADA,IAAMC,EAAa,GACVC,EAAM,EAAGA,EAAML,EAAUK,IAChCD,EAAWE,KAAK,cAAC,EAAD,CAAQd,OAAO,KAEjCS,EAAKK,KAAKF,QAIZ,IADA,IAAIG,EAAa,EACRJ,EAAM,EAAGA,EAAMJ,EAAUI,IAAO,CAEvC,IADA,IAAMC,EAAa,GACVC,EAAM,EAAGA,EAAML,EAAUK,IAC5BE,EAAa,EAAKhB,MAAMW,YAC1BE,EAAWE,KAAK,cAAC,EAAD,CAAQd,OAAO,KAC/Be,KAEAH,EAAWE,KAAK,cAAC,EAAD,CAAQd,OAAO,KAGnCS,EAAKK,KAAKF,GAGd,OAAOH,GA9BP,EAAKV,MAAQ,CACXW,WAAY,EAAKd,MAAMoB,eACvBhB,OAAO,GALQ,E,0CAoCnB,WACE,OAAO,qBAAKH,UAAU,OAAf,SAAuBI,KAAKK,uB,GAtCpBH,IAAMC,WCoDVa,G,wDApDb,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IAgBRsB,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZC,UAAWF,EAAMG,OAAOC,SAnBT,EAuBnBC,sBAAwB,SAACL,GACvBA,EAAMM,iBACN,EAAKC,2BAvBL,EAAK3B,MAAQ,CACXsB,UAAW,GACXL,eAAgB,GAJD,E,2DAQnB,WACE,IAAIW,EAAW,IAAIC,KAAK3B,KAAKF,MAAMsB,WAI/BL,GAHQ,IAAIY,KACoBD,GACK,MACJ,EACrC1B,KAAKmB,SAAS,CAAEJ,eAAgBA,M,oBAclC,WACE,OACE,sBAAKnB,UAAU,MAAf,UACI,cAAC,EAAD,IAEF,qBAAKA,UAAU,iBAAf,SACE,uBAAMgC,SAAU5B,KAAKuB,sBAArB,UACE,uBAAO3B,UAAU,QAAjB,sCACA,uBAAOA,UAAU,OACfiC,KAAK,SACLP,MAAOtB,KAAKF,MAAMsB,UAClBU,SAAU9B,KAAKiB,yBAKrB,qBAAKrB,UAAU,iBAAf,SACE,cAAC,EAAD,CAAMmB,eAAgBf,KAAKF,MAAMiB,kBADEf,KAAKF,MAAMiB,uB,GA7CtCb,IAAMC,YCAxB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.de770d6e.chunk.js","sourcesContent":["import '../components/styles.css'\n\nconst Header = (props) => {\n    return (\n        <div className='header-container'>\n            <h1 className='header'>Your Life in Weeks</h1>\n            <h2 className='sub-header'>Vizualize the time you've been around</h2>\n        </div>\n    )\n}\n\nexport default Header\n","//Each square \n//Could be a functional component (leaner)\n//CSS: give each square a border\n    //Each row has a class and each square has a class\n    //Square display in-line (display horizontally)\n\nimport React from \"react\";\n\nclass Square extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            lived: this.props.lived\n        };\n    }\n\n    makeClassNameForSquare() {\n        if(this.state.lived) {return 'filledSquare'}\n        else {return 'emptySquare'}\n    }\n\n    render() {\n        return (\n            <div className={this.makeClassNameForSquare()}></div>\n        ) \n    }\n}\n\nexport default Square\n\n\n","//The grid represents a 90 x 52 grid of squares\n//Each row is a year of life\n//Each square is a week of life\nimport React from \"react\";\nimport Square from \"./Square\";\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      weeksLived: this.props.weekDifference,\n      lived: false,\n    };\n  }\n\n  initializeGrid = (rowCount = 90, colCount = 52, grid = []) => {\n    if (this.weeksLived == 0) {\n      for (let row = 0; row < rowCount; row++) {\n        const currentRow = [];\n        for (let col = 0; col < colCount; col++) {\n          currentRow.push(<Square lived={false} />);\n        }\n        grid.push(currentRow);\n      }\n    } else {\n      let weeksCount = 0;\n      for (let row = 0; row < rowCount; row++) {\n        const currentRow = [];\n        for (let col = 0; col < colCount; col++) {\n          if (weeksCount < this.state.weeksLived) {\n            currentRow.push(<Square lived={true} />);\n            weeksCount++;\n          } else {\n            currentRow.push(<Square lived={false} />);\n          }\n        }\n        grid.push(currentRow);\n      }\n    }\n    return grid;\n  };\n\n  render() {\n    return <div className=\"grid\">{this.initializeGrid()}</div>;\n  }\n}\n\nexport default Grid;\n","import Header from \"./components/Header\";\nimport Grid from \"./components/Grid\";\nimport React from \"react\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      birthdate: \"\",\n      weekDifference: 0,\n    };\n  }\n\n  calculateWeekDifference() {\n    let birthday = new Date(this.state.birthdate);\n    let today = new Date();\n    let millisecondDifference = today - birthday;\n    let dayDifference = millisecondDifference / (1000 * 3600 * 24);\n    let weekDifference = dayDifference / 7;\n    this.setState({ weekDifference: weekDifference });\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      birthdate: event.target.value,\n    });\n  };\n\n  handleBirthdateSubmit = (event) => {\n    event.preventDefault();\n    this.calculateWeekDifference();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n          <Header />\n\n        <div className=\"form-container\">\n          <form onSubmit={this.handleBirthdateSubmit}>\n            <label className='label'>What day were you born? </label>\n            <input className='form'\n              type=\"String\"\n              value={this.state.birthdate}\n              onChange={this.handleInputChange}\n            />\n          </form>\n        </div>\n\n        <div className='grid-container' key={this.state.weekDifference}>\n          <Grid weekDifference={this.state.weekDifference} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}